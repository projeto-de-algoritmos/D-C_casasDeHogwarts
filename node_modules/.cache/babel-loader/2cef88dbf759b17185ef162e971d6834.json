{"ast":null,"code":"export const houses = [{\n  id: 1,\n  name: \"Corvinal\",\n  img: \"./img/corvinal.jpeg\",\n  priorityList: [5, 5, 8, 5, 10, 10, 4, 7, 6, 3]\n}, {\n  id: 2,\n  name: \"Grifin贸ria\",\n  img: \"./img/grifinoria.jpeg\",\n  priorityList: [10, 10, 6, 8, 4, 7, 7, 6, 8, 10]\n}, {\n  id: 3,\n  name: \"Lufa Lufa\",\n  img: \"./img/lufalufa.jpeg\",\n  priorityList: [7, 3, 4, 3, 7, 4, 10, 10, 3, 6]\n}, {\n  id: 4,\n  name: \"Grifin贸ria\",\n  img: \"./img/grifinoria.jpeg\",\n  priorityList: [10, 10, 6, 8, 4, 7, 7, 6, 8, 10]\n}];\nexport function setup(userPriority, housePriority) {\n  var array = [];\n  var tmp = Array(userPriority.length);\n  console.log(userPriority);\n\n  for (var index = 0; index < userPriority.length; index++) {\n    tmp[userPriority[index] - 1] = index + 1;\n  }\n\n  userPriority = tmp;\n\n  for (var i in housePriority) {\n    array.push(userPriority[housePriority[i] - 1]);\n  }\n\n  return array;\n}\nexport function mergeAndCount(a, b) {\n  var array = [];\n  var i = a.length;\n  var j = b.length;\n  var r = 0;\n\n  while (i !== 0 || j !== 0) {\n    if (j !== 0 && (i === 0 || b[b.length - j] < a[a.length - i])) {\n      array.push(b[b.length - j]);\n      j -= 1;\n      r += i;\n    } else {\n      array.push(a[a.length - i]);\n      i -= 1;\n    }\n  }\n\n  return [r, array];\n}\nexport function sortAndCount(userPriority) {\n  var rb, ra, r;\n\n  if (userPriority.length === 1) {\n    return [0, userPriority];\n  }\n\n  var a = userPriority.slice(0, Math.floor(userPriority.length / 2));\n  var b = userPriority.slice(Math.floor(userPriority.length / 2), userPriority.length);\n  [ra, a] = sortAndCount(a);\n  [rb, b] = sortAndCount(b);\n  [r, userPriority] = mergeAndCount(a, b);\n  return [r + ra + rb, userPriority];\n}\nexport function matchhouse(userPriority) {\n  var match;\n  var min = Infinity;\n  houses.forEach((house, index) => {\n    var [inversions] = sortAndCount(setup(userPriority, house.priorityList));\n    console.log(inversions);\n\n    if (inversions < min) {\n      min = inversions;\n      match = house;\n    }\n  });\n  return match;\n} //tentativa fracassada de melhorar o algoritmo\n// export function calcularDistancia(vetor1, vetor2) {\n//   let distancia = 0;\n//   for (let i = 0; i < vetor1.length; i++) {\n//     distancia += Math.pow(vetor1[i] - vetor2[i], 2);\n//   }\n//   return Math.sqrt(distancia);\n// }\n// export function encontrarGrupoMaisProximo(entradasUsuario) {\n//   let grupoMaisProximo = -1;\n//   let menorDistancia = Infinity;\n//   for (let i = 0; i < houses.length; i++) {\n//     const distancia = calcularDistancia(entradasUsuario, houses[i].priorityList);\n//     if (distancia < menorDistancia) {\n//       menorDistancia = distancia;\n//       grupoMaisProximo = i + 1;\n//     }\n//   }","map":{"version":3,"sources":["/home/kadu/Documentos/D-C_projetoSecreto/src/services/matchHouse.js"],"names":["houses","id","name","img","priorityList","setup","userPriority","housePriority","array","tmp","Array","length","console","log","index","i","push","mergeAndCount","a","b","j","r","sortAndCount","rb","ra","slice","Math","floor","matchhouse","match","min","Infinity","forEach","house","inversions"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,EAAZ,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB;AAJhB,CADoB,EAOpB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,uBAHP;AAIEC,EAAAA,YAAY,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA0B,CAA1B,EAA4B,EAA5B;AAJhB,CAPoB,EAapB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,EAAgB,EAAhB,EAAmB,CAAnB,EAAqB,CAArB;AAJhB,CAboB,EAmBpB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,uBAHP;AAIEC,EAAAA,YAAY,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA0B,CAA1B,EAA4B,EAA5B;AAJhB,CAnBoB,CAAf;AA2BP,OAAO,SAASC,KAAT,CAAeC,YAAf,EAA6BC,aAA7B,EAA4C;AACjD,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,GAAG,GAAGC,KAAK,CAACJ,YAAY,CAACK,MAAd,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;;AAEA,OAAK,IAAIQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,YAAY,CAACK,MAAzC,EAAiDG,KAAK,EAAtD,EAA0D;AACxDL,IAAAA,GAAG,CAACH,YAAY,CAACQ,KAAD,CAAZ,GAAsB,CAAvB,CAAH,GAA+BA,KAAK,GAAG,CAAvC;AACD;;AACDR,EAAAA,YAAY,GAAGG,GAAf;;AAEA,OAAK,IAAIM,CAAT,IAAcR,aAAd,EAA6B;AAC3BC,IAAAA,KAAK,CAACQ,IAAN,CAAWV,YAAY,CAACC,aAAa,CAACQ,CAAD,CAAb,GAAmB,CAApB,CAAvB;AACD;;AAED,SAAOP,KAAP;AACD;AAED,OAAO,SAASS,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAClC,MAAIX,KAAK,GAAG,EAAZ;AACA,MAAIO,CAAC,GAAGG,CAAC,CAACP,MAAV;AACA,MAAIS,CAAC,GAAGD,CAAC,CAACR,MAAV;AACA,MAAIU,CAAC,GAAG,CAAR;;AAEA,SAAON,CAAC,KAAK,CAAN,IAAWK,CAAC,KAAK,CAAxB,EAA2B;AACzB,QAAIA,CAAC,KAAK,CAAN,KAAYL,CAAC,KAAK,CAAN,IAAWI,CAAC,CAACA,CAAC,CAACR,MAAF,GAAWS,CAAZ,CAAD,GAAkBF,CAAC,CAACA,CAAC,CAACP,MAAF,GAAWI,CAAZ,CAA1C,CAAJ,EAA+D;AAC7DP,MAAAA,KAAK,CAACQ,IAAN,CAAWG,CAAC,CAACA,CAAC,CAACR,MAAF,GAAWS,CAAZ,CAAZ;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAC,MAAAA,CAAC,IAAIN,CAAL;AACD,KAJD,MAIO;AACLP,MAAAA,KAAK,CAACQ,IAAN,CAAWE,CAAC,CAACA,CAAC,CAACP,MAAF,GAAWI,CAAZ,CAAZ;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;AACF;;AACD,SAAO,CAACM,CAAD,EAAIb,KAAJ,CAAP;AACD;AAED,OAAO,SAASc,YAAT,CAAsBhB,YAAtB,EAAoC;AACzC,MAAIiB,EAAJ,EAAQC,EAAR,EAAYH,CAAZ;;AACA,MAAIf,YAAY,CAACK,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,WAAO,CAAC,CAAD,EAAIL,YAAJ,CAAP;AACD;;AAED,MAAIY,CAAC,GAAGZ,YAAY,CAACmB,KAAb,CAAmB,CAAnB,EAAsBC,IAAI,CAACC,KAAL,CAAWrB,YAAY,CAACK,MAAb,GAAsB,CAAjC,CAAtB,CAAR;AACA,MAAIQ,CAAC,GAAGb,YAAY,CAACmB,KAAb,CACNC,IAAI,CAACC,KAAL,CAAWrB,YAAY,CAACK,MAAb,GAAsB,CAAjC,CADM,EAENL,YAAY,CAACK,MAFP,CAAR;AAKA,GAACa,EAAD,EAAKN,CAAL,IAAUI,YAAY,CAACJ,CAAD,CAAtB;AACA,GAACK,EAAD,EAAKJ,CAAL,IAAUG,YAAY,CAACH,CAAD,CAAtB;AACA,GAACE,CAAD,EAAIf,YAAJ,IAAoBW,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAjC;AAEA,SAAO,CAACE,CAAC,GAAGG,EAAJ,GAASD,EAAV,EAAcjB,YAAd,CAAP;AACD;AAED,OAAO,SAASsB,UAAT,CAAoBtB,YAApB,EAAkC;AACvC,MAAIuB,KAAJ;AACA,MAAIC,GAAG,GAAGC,QAAV;AAEA/B,EAAAA,MAAM,CAACgC,OAAP,CAAe,CAACC,KAAD,EAAQnB,KAAR,KAAkB;AAC/B,QAAI,CAACoB,UAAD,IAAeZ,YAAY,CAACjB,KAAK,CAACC,YAAD,EAAe2B,KAAK,CAAC7B,YAArB,CAAN,CAA/B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYqB,UAAZ;;AAEA,QAAIA,UAAU,GAAGJ,GAAjB,EAAsB;AACpBA,MAAAA,GAAG,GAAGI,UAAN;AACAL,MAAAA,KAAK,GAAGI,KAAR;AACD;AACF,GARD;AAUA,SAAOJ,KAAP;AACD,C,CAGD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const houses = [\n  {\n    id: 1,\n    name: \"Corvinal\",\n    img: \"./img/corvinal.jpeg\",\n    priorityList: [5,5,8,5,10,10,4,7,6,3],\n  },\n  {\n    id: 2,\n    name: \"Grifin贸ria\",\n    img: \"./img/grifinoria.jpeg\",\n    priorityList: [10, 10, 6, 8, 4, 7, 7, 6,8,10],\n  },\n  {\n    id: 3,\n    name: \"Lufa Lufa\",\n    img: \"./img/lufalufa.jpeg\",\n    priorityList: [7,3,4,3,7,4,10,10,3,6],\n  },\n  {\n    id: 4,\n    name: \"Grifin贸ria\",\n    img: \"./img/grifinoria.jpeg\",\n    priorityList: [10, 10, 6, 8, 4, 7, 7, 6,8,10],\n  },\n];\n\nexport function setup(userPriority, housePriority) {\n  var array = [];\n  var tmp = Array(userPriority.length);\n  console.log(userPriority);\n\n  for (var index = 0; index < userPriority.length; index++) {\n    tmp[userPriority[index] - 1] = index + 1;\n  }\n  userPriority = tmp;\n\n  for (var i in housePriority) {\n    array.push(userPriority[housePriority[i] - 1]);\n  }\n  \n  return array;\n}\n\nexport function mergeAndCount(a, b) {\n  var array = [];\n  var i = a.length;\n  var j = b.length;\n  var r = 0;\n\n  while (i !== 0 || j !== 0) {\n    if (j !== 0 && (i === 0 || b[b.length - j] < a[a.length - i])) {\n      array.push(b[b.length - j]);\n      j -= 1;\n      r += i;\n    } else {\n      array.push(a[a.length - i]);\n      i -= 1;\n    }\n  }\n  return [r, array];\n}\n\nexport function sortAndCount(userPriority) {\n  var rb, ra, r;\n  if (userPriority.length === 1) {\n    return [0, userPriority];\n  }\n\n  var a = userPriority.slice(0, Math.floor(userPriority.length / 2));\n  var b = userPriority.slice(\n    Math.floor(userPriority.length / 2),\n    userPriority.length\n  );\n\n  [ra, a] = sortAndCount(a);\n  [rb, b] = sortAndCount(b);\n  [r, userPriority] = mergeAndCount(a, b);\n\n  return [r + ra + rb, userPriority];\n}\n\nexport function matchhouse(userPriority) {\n  var match;\n  var min = Infinity;\n\n  houses.forEach((house, index) => {\n    var [inversions] = sortAndCount(setup(userPriority, house.priorityList));\n    console.log(inversions);\n\n    if (inversions < min) {\n      min = inversions;\n      match = house;\n    }\n  });\n\n  return match;\n}\n\n\n//tentativa fracassada de melhorar o algoritmo\n\n// export function calcularDistancia(vetor1, vetor2) {\n//   let distancia = 0;\n//   for (let i = 0; i < vetor1.length; i++) {\n//     distancia += Math.pow(vetor1[i] - vetor2[i], 2);\n//   }\n//   return Math.sqrt(distancia);\n// }\n\n// export function encontrarGrupoMaisProximo(entradasUsuario) {\n//   let grupoMaisProximo = -1;\n//   let menorDistancia = Infinity;\n\n//   for (let i = 0; i < houses.length; i++) {\n//     const distancia = calcularDistancia(entradasUsuario, houses[i].priorityList);\n//     if (distancia < menorDistancia) {\n//       menorDistancia = distancia;\n//       grupoMaisProximo = i + 1;\n//     }\n//   }\n\n\n\n"]},"metadata":{},"sourceType":"module"}