[{"/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/index.js":"1","/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/App.js":"2","/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/pages/Form/index.jsx":"3","/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/services/matchHouse.js":"4","/home/kadu/Documentos/D-C_projetoSecreto/src/index.js":"5","/home/kadu/Documentos/D-C_projetoSecreto/src/App.js":"6","/home/kadu/Documentos/D-C_projetoSecreto/src/pages/Form/index.jsx":"7","/home/kadu/Documentos/D-C_projetoSecreto/src/services/matchHouse.js":"8"},{"size":197,"mtime":1687317938456,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1687317938452,"results":"11","hashOfConfig":"10"},{"size":6298,"mtime":1687317938456,"results":"12","hashOfConfig":"10"},{"size":2729,"mtime":1687317938456,"results":"13","hashOfConfig":"10"},{"size":197,"mtime":1687319733454,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1687319733454,"results":"16","hashOfConfig":"15"},{"size":6298,"mtime":1687320556394,"results":"17","hashOfConfig":"15"},{"size":2721,"mtime":1687320736036,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4o0u8o",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1n6w1u4",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/index.js",[],"/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/App.js",[],"/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/pages/Form/index.jsx",["37","38"],"/home/kadu/Documentos/DC_MeuMalvadoFavorito-master/src/services/matchHouse.js",[],"/home/kadu/Documentos/D-C_projetoSecreto/src/index.js",[],["39","40"],"/home/kadu/Documentos/D-C_projetoSecreto/src/App.js",[],"/home/kadu/Documentos/D-C_projetoSecreto/src/pages/Form/index.jsx",["41","42"],"import { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Slider from \"react-rangeslider\";\n\nimport { matchhouse } from \"../../services/matchHouse\";\n\nimport \"./styles.css\";\n\nexport function Form() {\n  const [questions] = useState([\n    {\n      id: 1,\n      label: \"Seu nível de companheirismo\",\n    },\n    {\n      id: 2,\n      label: \"Seu nível corajoso\",\n    },\n    {\n      id: 3,\n      label: \"Seu nível de ambição?\",\n    },\n    {\n      id: 4,\n      label: \"Seu nível de determinação\",\n    },\n    {\n      id: 5,\n      label: \"Seu nível de criatividade\",\n    },\n    {\n      id: 6,\n      label: \"Seu nível de curiosidade\",\n    },\n    {\n      id: 7,\n      label: \"Seu nível de paciência\",\n    },\n    {\n      id: 8,\n      label: \"Seu nível de honestidade\",\n    },\n    {\n      id: 9,\n      label: \"Seu nível de astucia\",\n    },\n    {\n      id: 10,\n      label: \"Seu nível de ousadia\",\n    },\n  ]);\n  const [answers, setAnswers] = useState([\n    {\n      id: 1,\n      label: \"Lealdade\",\n      priority: 5,\n    },\n    {\n      id: 2,\n      label: \"Coragem\",\n      priority: 5,\n    },\n    {\n      id: 3,\n      label: \"Ambição\",\n      priority: 5,\n    },\n    {\n      id: 4,\n      label: \"Determinação\",\n      priority: 5,\n    },\n    {\n      id: 5,\n      label: \"Criatividade\",\n      priority: 5,\n    },\n    {\n      id: 6,\n      label: \"Curiosidade\",\n      priority: 5,\n    },\n    {\n      id: 7,\n      label: \"Paciência\",\n      priority: 5,\n    },\n    {\n      id: 8,\n      label: \"Honestidade\",\n      priority: 5,\n    },\n    {\n      id: 9,\n      label: \"Astucia\",\n      priority: 5,\n    },\n    {\n      id: 10,\n      label: \"Ousadia\",\n      priority: 5,\n    },\n  ]);\n  const [priorityList, setPriorityList] = useState([1, 2, 3, 4]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [house, sethouse] = useState(null);\n\n  function handleSubmit() {\n    const match = matchhouse(priorityList);\n\n    if (match) {\n      sethouse(match);\n    }\n\n    setIsModalOpen(true);\n  }\n\n  useEffect(() => {\n    const orderedAnswers = answers.sort((a, b) => b.priority - a.priority);\n    const updatedAnswers = orderedAnswers.reduce((acc, item) => {\n      return [...acc, item.id];\n    }, []);\n\n    setPriorityList(updatedAnswers);\n  }, [answers]);\n\n  // useEffect(() => console.log(priorityList), [priorityList]);\n\n  return (\n    <div className=\"form-page\">\n      <div className=\"background\"><img src=\"./img/hogwarts.png\"/></div>\n  \n      <h1\n        style={{\n          fontSize: \"3.5rem\",\n          color: \"purple\",\n          textAlign: \"center\",\n        }}\n      >\n        <strong>Ciro & Carlin seletores</strong>\n      </h1>\n      <p\n        style={{\n          width: \"50%\",\n          maxWidth: 550,\n          textAlign: \"center\",\n        }}\n      >\n       <p className=\"texto\"> <strong>O chapéu seletor de Hogwarts foi de arrasta pra cima (F), para que Hogwarts continue em pleno funcionamento enquanto não é criado outro chapéu,\n      Dumbledore ordenou os trouxas Carlos Eduardo e Ciro a fazerem a sepração de casas dos novos Bruxos.</strong></p>\n        \n        \n        <p className=\"texto\"><strong>Atribua um valor de 0 a 10 para cada premissa abaixo de acordo com suas\n        características pessoais, sendo 0 para mínimo e 10 para máximo.</strong></p>\n      </p>\n      <div className=\"questions-list\">\n        {questions.map((question) => {\n          const answer = answers.find((item) => item.id === question.id);\n\n          return (\n            <div key={question.id} className=\"question-item\">\n              <b>\n                {question.id} - {question.label}\n              </b>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <p\n                  style={{\n                    fontSize: \"1.125rem\",\n                    marginBottom: 0,\n                    marginRight: \"0.8rem\",\n                  }}\n                >\n                  0\n                </p>\n                <Slider\n                  min={0}\n                  max={10}\n                  value={answer.priority}\n                  onChange={(value) => {\n                    const updatedAnswers = answers.reduce((acc, item) => {\n                      if (item.id === question.id) {\n                        return [\n                          ...acc,\n                          {\n                            ...item,\n                            priority: value,\n                          },\n                        ];\n                      }\n\n                      return [...acc, item];\n                    }, []);\n\n                    setAnswers(updatedAnswers);\n                  }}\n                />\n                <p\n                  style={{\n                    fontSize: \"1.125rem\",\n                    marginBottom: 0,\n                    marginLeft: \"0.8rem\",\n                  }}\n                >\n                  10\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <button\n        className=\"submit-btn\"\n        style={{\n          backgroundColor: \"purple\",\n          width: \"85%\",\n        }}\n        onClick={() => handleSubmit()}\n      >\n        VER MINHA CASA\n      </button>\n      <Modal show={isModalOpen} onHide={() => setIsModalOpen(false)} size=\"md\">\n        <Modal.Header closeButton>\n          <Modal.Title>Sua casa em Hogwarts</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {house ? (\n            <div className=\"modal-body-container\">\n              <img src={house.img} alt={house.name} />\n              <div>\n                <h2>{house.name}</h2>\n    \n              </div>\n            </div>\n          ) : (\n            <h1></h1>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <div className=\"modal-footer-container\">\n            <button\n              style={{ backgroundColor: \"purple\", color: \"white\" }}\n              onClick={() => setIsModalOpen(false)}\n            >\n              TENTAR NOVAMENTE\n            </button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","/home/kadu/Documentos/D-C_projetoSecreto/src/services/matchHouse.js",[],{"ruleId":"43","severity":1,"message":"44","line":131,"column":35,"nodeType":"45","endLine":131,"endColumn":66},{"ruleId":"46","severity":1,"message":"47","line":243,"column":13,"nodeType":"45","endLine":243,"endColumn":17},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"43","severity":1,"message":"44","line":131,"column":35,"nodeType":"45","endLine":131,"endColumn":66},{"ruleId":"46","severity":1,"message":"47","line":243,"column":13,"nodeType":"45","endLine":243,"endColumn":17},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-global-assign","no-unsafe-negation"]